setwd("~/Dropbox/SalemCenter/classes/PRL/Fall2024/Policy-Research-Laboratory/code")
data = read.csv('../data/housedata.csv')
View(data)
fit = lm(Price~Size,data)
summary(fit)
# example 2: ERCOT
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_ercot = read.csv("../data/load_ercot.csv")
load_ercot = read.csv("../data/load_ercot.csv")
View(load_ercot)
load_temperature = read.csv("../data/load_temperature.csv")
load_combined = merge(load_ercot, load_temperature, by = 'Time')
head(load_combined)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
lm1 = lm(COAST ~ KHOU, data=load_combined)
summary(lm1)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
abline(lm1,lty=1,lwd=4,col='blue')
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
lm2 = lm(COAST ~ KHOU + KHOU_squared, data=load_combined)
summary(lm2)
test = predict(lm2)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = lm2$coefficients[1] + lm2$coefficients[2]*xnew + lm2$coefficients[3]*xnew^2
lines(xnew,quadfit,col=2,lwd=3)
abline(lm1,col='blue',lwd=2)
points(load_combined$KHOU,test,pch=16,col='green',cex=1.5)
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
head(creatinine)
View(creatinine)
mean(creatinine$creatclear)
boot1 = do(5000)*{
mean(resample(creatinine)$creatclear)
}
hist(boot1$result)
sd(boot1$result)
confint(boot1$result)
s = sd(creatinine$creatclear)
n = nrow(creatinine)
se_closedform = sqrt(s^2/n)
se_closedform
sd(boot1$result)
plot(creatclear~age, data=creatinine,
pch=19, col='grey', bty='n',
ylab="creatinine score", xlab="Age")
lm1 = lm(creatclear~age, data=creatinine)
abline(lm1, lwd=2, col='blue')
coef(lm1)
boot1 = do(10000)*lm(creatclear~age, data=resample(creatinine))
head(boot1)
hist(boot1$Intercept)
hist(boot1$age)
hist(boot1$Intercept)
hist(boot1$age)
sd(boot1$Intercept)
sd(boot1$age)
summary(lm1)
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand")
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,1000)
# smaller sample
load_combined_small = sample(load_combined,1000)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 5000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 5000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 1000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
dat = read.csv("Apple_Safeway.csv")
setwd("~/Dropbox/SalemCenter/classes/IntroML-MSBAWP/Fall2024/code_more")
dat = read.csv("Apple_Safeway.csv")
head(dat)
View(dat)
plot(dat$Safeway,dat$Apple,pch=19)
plot(dat$Safeway,dat$Apple,pch=19)
plot(dat$Apple,type='l')
lm1 = lm(Apple~Safeway,data=dat)
summary(lm1)
lm2 = lm(Apple ~ Safeway + SP500,data=dat)
summary(lm2)
library(mosaic)
## load the data and subset them into two parties
MPs <- read.csv("../data/MPs.csv")
setwd("~/Dropbox/SalemCenter/classes/PRL/Fall2024/Policy-Research-Laboratory/code")
library(mosaic)
## load the data and subset them into two parties
MPs <- read.csv("../data/MPs.csv")
MPs.labour <- subset(MPs, subset = (party == "labour"))
MPs.tory <- subset(MPs, subset = (party == "tory"))
View(MPs)
labour.fit1 <- lm(ln.net ~ margin,
data = MPs.labour[MPs.labour$margin < 0, ])
labour.fit2 <- lm(ln.net ~ margin,
data = MPs.labour[MPs.labour$margin > 0, ])
tory.fit1 <- lm(ln.net ~ margin, data = MPs.tory[MPs.tory$margin < 0, ])
tory.fit2 <- lm(ln.net ~ margin, data = MPs.tory[MPs.tory$margin > 0, ])
## Labour: range of predictions
y1l.range <- c(min(MPs.labour$margin), 0) # min to 0
y2l.range <- c(0, max(MPs.labour$margin)) # 0 to max
## prediction
y1.labour <- predict(labour.fit1, newdata = data.frame(margin = y1l.range))
y2.labour <- predict(labour.fit2, newdata = data.frame(margin = y2l.range))
## Tory: range of predictions
y1t.range <- c(min(MPs.tory$margin), 0) # min to 0
y2t.range <- c(0, max(MPs.tory$margin)) # 0 to max
## predict outcome
y1.tory <- predict(tory.fit1, newdata = data.frame(margin = y1t.range))
y2.tory <- predict(tory.fit2, newdata = data.frame(margin = y2t.range))
## scatterplot with regression lines for labour
plot(MPs.labour$margin, MPs.labour$ln.net, main = "Labour",
xlim = c(-0.5, 0.5), ylim = c(6, 18), xlab = "Margin of victory",
ylab = "log net wealth at death",pch=19,col='gray')
abline(v = 0, lty = "dashed")
## add regression lines
lines(y1l.range, y1.labour, col = "blue",lwd=2)
lines(y2l.range, y2.labour, col = "blue",lwd=2)
## scatterplot with regression lines for tory
plot(MPs.tory$margin, MPs.tory$ln.net, main = "Tory", xlim = c(-0.5, 0.5),
ylim = c(6, 18), xlab = "Margin of victory",
ylab = "log net wealth at death",pch=19,col='gray')
abline(v = 0, lty = "dashed")
## add regression lines
lines(y1t.range, y1.tory, col = "blue",lwd=2)
lines(y2t.range, y2.tory, col = "blue",lwd=2)
## average net wealth for Tory MP
tory.MP <- exp(y2.tory[1])
tory.MP
## average net wealth for Tory non-MP
tory.nonMP <- exp(y1.tory[2])
tory.nonMP
# diff in diff example with minimum wage data
minwage <- read.csv("../data/minwage.csv") # load the data
minwageNJ <- subset(minwage, subset = (location != "PA"))
minwagePA <- subset(minwage, subset = (location == "PA"))
# defining outcome of interest
minwageNJ$fullPropAfter <- minwageNJ$fullAfter /
(minwageNJ$fullAfter + minwageNJ$partAfter)
minwagePA$fullPropAfter <- minwagePA$fullAfter /
(minwagePA$fullAfter + minwagePA$partAfter)
minwageNJ$fullPropBefore <- minwageNJ$fullBefore /
(minwageNJ$fullBefore + minwageNJ$partBefore)
minwagePA$fullPropBefore <- minwagePA$fullBefore /
(minwagePA$fullBefore + minwagePA$partBefore)
# diffindiff estimate
NJdiff <- mean(minwageNJ$fullPropAfter) - mean(minwageNJ$fullPropBefore)
PAdiff <- mean(minwagePA$fullPropAfter) - mean(minwagePA$fullPropBefore)
NJdiff - PAdiff
# diff in diff example with minimum wage data
minwage <- read.csv("../data/minwage.csv") # load the data
minwageNJ <- subset(minwage, subset = (location != "PA"))
minwagePA <- subset(minwage, subset = (location == "PA"))
# defining outcome of interest
minwageNJ$fullPropAfter <- minwageNJ$fullAfter /
(minwageNJ$fullAfter + minwageNJ$partAfter)
minwagePA$fullPropAfter <- minwagePA$fullAfter /
(minwagePA$fullAfter + minwagePA$partAfter)
minwageNJ$fullPropBefore <- minwageNJ$fullBefore /
(minwageNJ$fullBefore + minwageNJ$partBefore)
minwagePA$fullPropBefore <- minwagePA$fullBefore /
(minwagePA$fullBefore + minwagePA$partBefore)
# diffindiff estimate
NJdiff <- mean(minwageNJ$fullPropAfter) - mean(minwageNJ$fullPropBefore)
PAdiff <- mean(minwagePA$fullPropAfter) - mean(minwagePA$fullPropBefore)
NJdiff - PAdiff
# adding a binary variable to our data set
minwage_big = rbind(minwage,minwage)
minwage_big$time = rep(NA,nrow(minwage_big))
minwage_big$time[1:nrow(minwage)] = "Before"
minwage_big$time[(nrow(minwage)+1):nrow(minwage_big)] = "After"
minwage_big$wageBefore[which(minwage_big$time=="After")] <- NA
minwage_big$fullBefore[which(minwage_big$time=="After")] <- NA
minwage_big$partBefore[which(minwage_big$time=="After")] <- NA
minwage_big$wageAfter[which(minwage_big$time=="Before")] <- NA
minwage_big$fullAfter[which(minwage_big$time=="Before")] <- NA
minwage_big$partAfter[which(minwage_big$time=="Before")] <- NA
head(minwage_big)
tail(minwage_big)
# fit a special linear model
minwage_big$fullPropBefore = minwage_big$fullBefore /
(minwage_big$fullBefore + minwage_big$partBefore)
minwage_big$fullPropAfter = minwage_big$fullAfter /
(minwage_big$fullAfter + minwage_big$partAfter)
fullProp = c(minwage_big$fullPropBefore[!is.na(minwage_big$fullPropBefore)],minwage_big$fullPropAfter[!is.na(minwage_big$fullPropAfter)])
minwage_big$fullProp = fullProp
# fix location variable
minwage_big$location[which(minwage_big$location!="PA")] <- "NJ"
head(minwage_big)
View(minwage_big)
fit = lm(fullProp ~ location + time + location*time, data=minwage_big)
summary(fit)
