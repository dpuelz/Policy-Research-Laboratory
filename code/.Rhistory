X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
X = runif(100)
hist(X)
hist_data <- hist(X)
counts = hist_data$counts
breaks = hist_data$breaks
breaks_new = breaks[-length(breaks)]  + (breaks[-1] - breaks[-length(breaks)])/2
lines(breaks_new,counts,lwd=3,lty=2,col='red')
abline(v=0.8,col=2,lwd=3)
library(lubridate)
# example 1: of simple linear regression
data = read.csv('../data/housedata.csv')
fit = lm(Price~Size,data)
summary(fit)
# example 2: ERCOT
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_ercot = read.csv("../data/load_ercot.csv")
load_temperature = read.csv("../data/load_temperature.csv")
load_combined = merge(load_ercot, load_temperature, by = 'Time')
head(load_combined)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
dev.off()
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
head(creatinine)
library(lubridate)
# example 1: of simple linear regression
data = read.csv('../data/housedata.csv')
setwd("~/Dropbox/SalemCenter/classes/PRL/Spring2024/Policy-Research-Laboratory/code")
library(lubridate)
# example 1: of simple linear regression
data = read.csv('../data/housedata.csv')
View(data)
polot
plot(data)
fit = lm(Price~Size,data)
summary(fit)
# example 2: ERCOT
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_ercot = read.csv("../data/load_ercot.csv")
View(load_ercot)
# Now weather data at the KHOU weather station
# temps in F
load_temperature = read.csv("../data/load_temperature.csv")
View(load_temperature)
load_combined = merge(load_ercot, load_temperature, by = 'Time')
head(load_combined)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
load_combined = mutate(load_combined,
Time = ymd_hms(Time))
plot(load_combined$Time,load_combined$COAST,type='l',col=rgb(0,0,0,alpha=0.6))
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
lm1 = lm(COAST ~ KHOU, data=load_combined)
summary(lm1)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
abline(lm1,lty=1,lwd=4,col='blue')
plot(lm1$residuals)
plot(lm1$residuals,type='l')
plot(lm1$residuals,load_combined$KHOU)
plot(load_combined$KHOU,lm1$residuals,pch=19,cex=0.5)
mean(lm1$residuals)
hist(lm1$residuals)
KHOU_squared = load_combined$KHOU^2
KHOU_squared
load_combined$KHOU_squared = KHOU_squared
lm2 = lm(COAST ~ KHOU + KHOU_squared, data=load_combined)
summary(lm2)
summary(lm1)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
xnew
quadfit = lm2$coefficients[1] + lm2$coefficients[2]*xnew + lm2$coefficients[3]*xnew^2
lines(xnew,quadfit,col=2,lwd=3)
abline(lm1)
abline(lm1,col=blue,lwd=2)
abline(lm1,col=blue,lwd=2)
abline(lm1,col='blue',lwd=2)
xnew
lm2$coefficients[1]
lm2$coefficients[2]
lm2$coefficients[3]
quadfit
test = predict(lm2)
test
points(load_combined$KHOU,test)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
quadfit = lm2$coefficients[1] + lm2$coefficients[2]*xnew + lm2$coefficients[3]*xnew^2
lines(xnew,quadfit,col=2,lwd=3)
abline(lm1,col='blue',lwd=2)
points(load_combined$KHOU,test,pch=16,col='green',cex=1.5)
dev.off()
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
head(creatinine)
View(creatinine)
# Look at the mean creatinine clearance rate
mean(creatinine$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
mean(resample(creatinine)$creatclear)
boot1 = do(5000)*{
mean(resample(creatinine)$creatclear)
}
hist(boot1$result)
sd(boot1$result)
confint(boot1$result)
plot(creatclear~age, data=creatinine,
pch=19, col='grey', bty='n',
ylab="creatinine score", xlab="Age")
lm1 = lm(creatclear~age, data=creatinine)
abline(lm1, lwd=2, col='blue')
coef(lm1)
boot1 = do(1000)*lm(creatclear~age, data=resample(creatinine))
boot1 = do(1000)*lm(creatclear~age, data=resample(creatinine))
head(boot1)
head(boot1)
hist(boot1$Intercept)
hist(boot1$age)
sd(boot1$Intercept)
sd(boot1$age)
summary(lm1)
# bootstrapped standard errors
sd(boot1$Intercept)
sd(boot1$age)
boot1 = do(10000)*lm(creatclear~age, data=resample(creatinine))
hist(boot1$Intercept)
hist(boot1$age)
# bootstrapped standard errors
sd(boot1$Intercept)
sd(boot1$age)
# confidence intervals
confint(boot1)
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand")
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
load_combined_small = sample(load_combined,500)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,10)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,100)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,1000)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 500
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
# smaller sample
load_combined_small = sample(load_combined,1000)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 5000
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.95,xlab="temperature (F)",ylab="power demand")
x = load_combined_small$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
setwd("~/Dropbox/SalemCenter/classes/PRL/Spring2024/Policy-Research-Laboratory/code")
